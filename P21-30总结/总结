JS赋值运算符:
    一共有六种赋值运算符
     =
         a = 5 //这里注意不要跟等号混淆，等号是 == 单个而是赋值！！！
     +=
        a += 5 等价于 a = a+5
     -=
        a -=5 等价于 a = a-5
     *=
        a *=5 等价于 a = a*5
     /=
        a /=5 等价于 a = a/5
     %=
        a %=5 等价于 a = a%5
--------------------------------
JS关系运算符:
    通过关系运算符可以比较两个值之间的大小，
        如果关系成立则返回true，如果关系不成立则返回false
    
    >, <, >=, <=
        这些跟平常数学里的规则一模一样
    
    非数值情况；
        -对非数值进行比较，会先将值转换为数值然后进行比较。
        -任何值跟NaN进行比较都是False!!!!!
        -如果比较的值两侧都是字符串，不会转换为Number类型
            而是根据字符串的Unicode编码进行比较
            比较字符编码时时一位一位进行比较
                所以两个字符串进行比较的时候，务必在值前面加上+(加号)实现隐式的Number转换!!!!!!
    
    在网页中使用&#四位编码;来实现对应编码的值
    JS中: \u四位编码
-----------------------------------
JS相等运算:
    
        相等运算符用来比较两个值是否相等
            如果相等返回true，否则返回false
        
        ==
            -当用==来比较两个值，如果值的类型不同
                则会自动进行类型转换，将其转换为相同类型在进行比较(80%都是转换为数字)
            -特殊情况:
                Undefined 衍生自 null
                    当Undefined == null的时候会返回true
        
        不相等
            不相等判断两个值是否不相等
                如果不相等则返回true,相等则返回false
        
        使用 != 来表示
            -如果比较的值不相同，则会自动转换类型
        
        全等
            ===
            -用来判断两个值是否全等，如果相等则返回true,不相等返回false
            -全等不会进行类型转换!!!!!!!!
            例子:
                var a = 10;
                console.log("10" === 10 )//false 因为类型不一样
        不全等
            !==
            -用来判断两个值是否不全等，如果不全等则返回true,全相等则返回false
            -不全等不会进行类型转换!!!!
        
        isNaN()函数,调用此函数可以判断一个值是否为NaN,
            如果该值是NaN则返回true,否则返回false
---------------------------------
JS条件运算符&代码块:
    条件运算符也称之为三元运算符:
        语法:
            条件表达式? 语句1;语句2;
        -执行的流程:
            条件表达式执行的时候如果值为true则返回语句1，并返回结果
                如果为false则会返回语句2，并返回结果。
        如果表达式比较的值为非布尔值，会先转换为布尔值在进行比较
        -例子:
            "hello"?alert("你猜我出不出来?"):alert("猜猜是我还是前面的~")
            //前面的条件表达式为"hello",在字符串中除非空串其他值都是true所以此处返回语句一"你猜我出不出来?"

代码块:
    {}在大括号里面的代码为一个代码块，代码块里面的内容，在外部完全是可见的。代码块后不需要加分号
----------------------------------
JS If语句
    流程控制语句
        -JS的程序从上到下一行一行的
        -通过流程控制语句可以控制程序执行流程，
            是程序可以根据一定的条件来选择执行
        -语句的分类:
            1.条件判断语句
            2.条件分支语句
            3.循环语句
    -语法一:
        if(条件表达式){
            语句....
        }
        else{
            语句....
        }
        if...else语法
        如果第一个条件表达式为true则会执行if里面代码块的语句，如果为false则执行else代码块里的语句
    -语法二:
        if(条件表达式){
            语句....
        }
        else if(条件表达式){
            语句....
        }
        else if(条件表达式){
            语句...
        }
        else{
            语句....
        }
        如果第一个if表达式为true则执行if代码块里面的语句，如果为false跳到else if的条件表达式判断，
            结果为true则执行里面代码块的内容，false以此类推
                if语句只能控制紧随其后的那个语句
                如果希望if语句可以控制多条语句，可以将这些语句统一放到代码块中
                if语句后的代码块不是必须的，但是在开发中尽量写上代码块，及时if后面只有一个语句  
        prompt()函数: 弹出一个可以用户可输入的弹窗
-----------------------------------------------


练一练:

1. 请用代码编写下面内容:
    从键盘输入小明的期末成绩:
    当成绩为100时，'奖励一辆BMW'
    当成绩为[80-99]时，'奖励一台iphone15s'
    当成绩为[60-80]时，'奖励一本参考书'
    其他时，什么奖励也没有

2.请用代码编写下面内容:
     	大家都知道，男大当婚，女大当嫁。那么女方家长要嫁女儿，当然要提出一定的条件： 
			 	高：180cm以上; 富:1000万以上; 帅:500以上;
			 	如果这三个条件同时满足，则:'我一定要嫁给他'
			 	如果三个条件有为真的情况，则:'嫁吧，比上不足，比下有余。' 
			 	如果三个条件都不满足，则:'不嫁！' 

3.请用代码编写下面内容:
    编写程序，由键盘输入三个整数分别存入变量num1、num2、num3，
		对他们进行排序，并且从小到大输出。


4.请判断下面会输出的值
    var a = 120
    console.log("120" === a );

5.请判断下面会输出的值
    var a = "10", b = 10
    a === b? alert("显示我！！"):alert("哼~我才是那个会被显示的！")

6.请判断下面会输出的值
    var a = "10", b = 10
    a == b? alert("猜猜谁会出来~"):alert("这次肯定是我了吧~")

7.请描述全等和相等的区别，不全等和不相等的区别

8.怎么在js里显示unicode编码? html中呢?

9.请判断下面会输出的值
    var a = "";
    var b;
    console.log(b == a);

10.怎么样表达一个代码块?